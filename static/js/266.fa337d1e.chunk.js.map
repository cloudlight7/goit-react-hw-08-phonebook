{"version":3,"file":"static/js/266.fa337d1e.chunk.js","mappings":"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","sources":["components/Form/CreateContacts/FormStyle.jsx","components/redux/contacts/selectors.js","components/Form/CreateContacts/index.jsx","components/Contact/ContactStyle.jsx","components/Contact/index.jsx","components/ContactList/index.jsx","components/Filter/FilterStyle.jsx","components/Filter/index.jsx","pages/ContactsPage/ContactsPage.styled.jsx","pages/ContactsPage/index.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormCard = styled.div`\n  width: 300px;\n  margin: 0 auto;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n  background-color: #e8e8e8;\n  box-shadow: 2px 2px 10px #ccc;\n`;\nexport const FormBox = styled.div`\n  margin-bottom: 15px;\n`;\nexport const InputName = styled.label`\n  font-size: 18px;\n  margin-bottom: 5px;\n`;\nexport const Input = styled.input`\n  width: 100%;\n  padding: 12px 20px;\n  font-size: 16px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-sizing: border-box;\n  transition: 0.5s;\n`;\n/*\nimport { Formik, ErrorMessage, Field } from 'formik';\nexport const Input = styled(Field)`\n  width: 100%;\n  padding: 12px 20px;\n  font-size: 16px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-sizing: border-box;\n  transition: 0.5s;\n`;\n*/\nexport const Button = styled.button`\n  width: 100%;\n  background-color: #333;\n  color: white;\n  padding: 14px 20px;\n  margin: 8px 0;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  &:hover {\n    background-color: #ccc;\n    color: black;\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.data;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectIsDeleting = state => state.contacts.isDeleting;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectCurrentID = state => state.contacts.currentID;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);","//mport React from 'react';\nimport { FormCard, FormBox, InputName, Input, Button } from './FormStyle';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport \"yup-phone-lite\";\nimport { useFormik } from 'formik/dist';\nimport { addContact } from 'components/redux/contacts/operation';\nimport { selectContacts } from 'components/redux/contacts/selectors';\nexport const CreateContactForm = () => {\n  const contacts  = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      number: '',\n    },\n    validationSchema: Yup.object({\n      name: Yup.string()\n        .min(2, 'Too Short!')\n        .max(8, 'Too Long!')\n        .required('Required name'),\n        number: Yup.number()\n        .min(12,'Too Short!')\n        .typeError(\"That doesn't look like a phone number\")\n        .positive(\"A phone number can't start with a minus\")\n        .integer(\"A phone number can't include a decimal point\")\n        .required('A phone number is required'),\n    }),\n    onSubmit: values => {\n      if (contacts.find(option => option.name.toLowerCase() === values.name.toLowerCase())) {\n        formik.resetForm();\n        alert(`${values.name} is already in contact.`);\n        return;\n      }\n      dispatch(addContact(values))\n      formik.setSubmitting(false);\n      formik.resetForm();\n      //alert(JSON.stringify(values, null, 2));\n    },\n  });\n  return (\n    <FormCard>\n      <form onSubmit={formik.handleSubmit}>\n        <FormBox>\n          <InputName htmlFor=\"firstName\">Name</InputName>\n          {formik.touched.name && formik.errors.name ? (\n            <div className=\"error\">{formik.errors.name}</div>\n          ) : null}\n          <Input\n            style={\n              formik.touched.name && formik.errors.name\n                ? { backgroundColor: 'red' }\n                : null\n            }\n            id=\"name\"\n            name=\"name\"\n            type=\"text\"\n            onChange={formik.handleChange}\n            value={formik.values.name}\n          />\n        </FormBox>\n        <FormBox>\n          <InputName htmlFor=\"lastName\">phone</InputName>\n          {formik.touched.number && formik.errors.number ? (\n            <div className=\"error\">{formik.errors.number}</div>\n          ) : null}\n          <Input\n            style={\n              formik.touched.number && formik.errors.number\n                ? { backgroundColor: 'red' }\n                : null\n            }\n            id=\"number\"\n            name=\"number\"\n            type=\"tel\"\n            onChange={formik.handleChange}\n            value={formik.values.number}\n          />\n        </FormBox>\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    </FormCard>\n  );\n};\n","import styled from 'styled-components'\n\nexport const Element = styled.li`\n     width: 420px;\n  padding: 12px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: start;\n  justify-content: space-between;\n  background: #EDFBD8;\n  border-radius: 8px;\n  border: 1px solid #84D65A;\n  box-shadow: 0px 0px 5px -3px #111;\n  margin: 5px;\n`\nexport const Text = styled.p`\n    font-size: 15px;\n    \n    margin-right: 5px;\n    &:last-child{\n       margin-right: 0; \n    }\n`\n\nexport const Button = styled.button`\n      font-family: monospace;\n  background-color: #84D65A;\n  color: #345a21;\n  border: none;\n  border-radius: 8px;\n  width: 80px;\n  height: 35px;\n  transition: .3s;\n\n  &:hover{\n      background-color: #ff3718;\n  box-shadow: 0 0 7px 5px #df0e0a;\n  color: #a70303;\n  }\n`\n\n","import { Element, Button, Text } from './ContactStyle';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'components/redux/contacts/operation';\nconst Contact = ({ item }) => {\n  const dispatch = useDispatch();\n  const delContact = id => {\n    dispatch(deleteContact(id));\n  };\n  return (\n    <Element>\n      <Text>{item.name}</Text> <Text>{item.number}</Text>\n      <Button onClick={() => delContact(item.id)} type=\"submit\">\n        Delete\n      </Button>\n    </Element>\n  );\n};\nexport default Contact;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { useEffect } from 'react';\n\nimport Loader from 'components/Loader';\nimport { toast } from 'react-toastify';\nimport {\n  fetchContacts,\n} from 'components/redux/contacts/operation';\nimport {\n  selectError,\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'components/redux/contacts/selectors';\nimport Contact from 'components/Contact';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n  useEffect(() => {\n    if (!!error) {\n      toast.error(error);\n    }\n    dispatch(fetchContacts());\n  }, [dispatch, error]);\n\n  const filteredContacts = useSelector(selectVisibleContacts);\n\n  const isLoading = useSelector(selectIsLoading);\n  return (\n    <>\n      <ul>\n        {isLoading && <Loader />}\n        {!!filteredContacts.length &&\n          filteredContacts.map(item => {\n            return <Contact key={item.id} item={item} />\n          })}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactList;\n\n\n","import styled from 'styled-components'\n\nexport const Input = styled.input`\n      padding: 10px;\n  width: 120px;\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  box-shadow: 0px 2px 3px 2px #345a21;\n  font-size: 18px;\n  transition: width 0.3s;\n  margin: 10px;\n\n  &:focus{\n  outline: 1px solid #84D65A;\n  box-shadow: none;\n  width: 230px;\n  box-shadow: -1px 9px 16px 5px #345a21;\n  }\n  &::placeholder {\n  color: #345a21;\n}\n`","import { useDispatch } from 'react-redux';\nimport { Input } from './FilterStyle';\nimport { setFilter} from 'components/redux/contacts/filterSlice';\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const onChange = ({ target: { value } }) => {\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <>\n      <p>Find contacts by name</p>\n      <Input\n        onChange={onChange}\n        placeholder=\"Search...\"\n        name=\"filter\"\n        type=\"text\"\n      />\n    </>\n  );\n};\nexport default Filter;\n","import styled from 'styled-components';\nexport const ContactTitle = styled.h1`\n  padding-top: 30px;\n  text-align: center;\n`;\n\nexport const SubContactTitle = styled.h2`\n  text-align: center;\n`;\n\nexport const ContactsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;","\n/*import ContactList from 'components/ContactList';\n\nexport default function ContactsPage() {\n  return (\n    <ContactList/>\n  );\n}*/\n\nimport { CreateContactForm } from 'components/Form/CreateContacts';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\n\nimport { fetchContacts } from 'components/redux/contacts/operation';\nimport {\n  selectError,\n  selectVisibleContacts,\n} from 'components/redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport {\n  ContactTitle,\n  ContactsContainer,\n  SubContactTitle,\n} from './ContactsPage.styled';\n\nexport default function ContactsPage() {\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n  const selectedContacts = useSelector(selectVisibleContacts);\n\n  useEffect(() => {\n    if (!!error) {\n      toast.error(error);\n    }\n    dispatch(fetchContacts());\n  }, [dispatch, error]);\n\n  return (\n    <ContactsContainer>\n      <ContactTitle>Phone book</ContactTitle>\n\n      <SubContactTitle>Adding new contact</SubContactTitle>\n      <CreateContactForm />\n      <SubContactTitle>Contacts</SubContactTitle>\n      <Filter />\n\n      {!!selectedContacts.length && <ContactList/>}\n    </ContactsContainer>\n  );\n}"],"names":["FormCard","styled","_templateObject","_taggedTemplateLiteral","FormBox","_templateObject2","InputName","_templateObject3","Input","_templateObject4","Button","_templateObject5","selectContacts","state","contacts","data","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filter","normalizedFilter","toLowerCase","contact","name","includes","CreateContactForm","useSelector","dispatch","useDispatch","formik","useFormik","initialValues","number","validationSchema","Yup","min","max","required","typeError","positive","integer","onSubmit","values","find","option","resetForm","alert","concat","addContact","setSubmitting","_jsx","children","_jsxs","handleSubmit","htmlFor","touched","errors","className","style","backgroundColor","id","type","onChange","handleChange","value","Element","Text","_ref","item","onClick","deleteContact","useEffect","toast","fetchContacts","filteredContacts","_Fragment","Loader","length","map","Contact","target","setFilter","placeholder","ContactTitle","SubContactTitle","ContactsContainer","ContactsPage","selectedContacts","Filter","ContactList"],"sourceRoot":""}